#ifndef EVENTS_IDL
#define EVENTS_IDL

#include "scs.idl"

module event_service {
   typedef any Event;
   
   exception NameAlreadyInUse {
      string name;
   };
   
   exception InvalidName {
      string name;
   };
   
   
   struct ChannelDescr {
      string name;
      scs::core::IComponent channel;
   };
   typedef sequence<ChannelDescr> ChannelDescrSeq;
   
   
   
   interface EventSink {
      void push (in Event ev);
      void disconnect();
   };
   
	  
   interface ChannelFactory {
      scs::core::IComponent create (in string name) raises (NameAlreadyInUse);
      void destroy (in string name) raises (InvalidName);
   };
   
   interface ChannelCollection {
      scs::core::IComponent getChannel (in string name);
      ChannelDescrSeq getAll();
   };

};

#endif
